---
date: 2023-01-08
---

# Introductions

## About me

## Our amazing TAs

## You? {.smaller}

Let‚Äôs play a game

**Goal ‚Äì join everyone together via a small \# of introductions.**

1.  Designate a first player.

2.  At each turn (üï∫üèΩ üíÅ üíÉ üôÖüèø ü§ó ):

    a.  Move: Player introduces themselves by telling one factoid about their life, and then poses, and everyone who identifies with the factoid joins by posing like the Player

    b.  Respond: Joins are invalid and must be reversed if...

        i.  ‚â• 8 students remain, and more than half of remaining students join, or
        ii. \< 8 students remain, and fewer than all join.

    c.  If the join is valid, then all who have ever joined take the new pose.

    d.  Iterate: Player selects a new player for the next round.

::: notes
Icebreaker game
:::

## You?

Questions:

1. What‚Äôs an ideal factoid? One that...                                                                   
2. What‚Äôs the least number of questions we can hope for?

[Why did we do this?]{.fragment}

## Where to start? {.center}

Canvas: <https://canvas.ubc.ca/courses/130127>

##  {.bg-how-learning-works data-menu-title="Elements of mastery"}

##  {background-iframe="https://firas.moosvi.com/courses/cpsc203/2023_WT2" background-interactive="true" data-menu-title="Course Website"}

## About This Course

This course will teach you a bajillion different things!

-   Tools: Terminal, Markdown, Git, Visual Studio Code, PrairieLearn
-   Computer science: Python (!!!), efficiency, web scraping, graphs
-   Data science: Pandas, DataFrames, visualizations
-   Algorithms: many algorithms!
-   Art and creativity: lots of examples!

## Course Designer ‚Äì Dr. Cinda Heeren!

::::: columns
::: {.column width="60%"}
-   Teaching Professor, at UBC since 2017 (previously at University of Illinois Urbana-Champaign).

-   Teaches mid-level required courses for CS specializations (mostly CPSC 221) & a similar course for non-majors!
:::

::: {.column width="40%"}
![](images/cinda-heeren.jpg){fig-alt="Course designer Dr. Cinda Heeren"}
:::
:::::

## Course Components

**Lectures:** in-class activities based on problem solving and design.

**Labs:** practice on lecture material

**Problems of the day (POTD):** one per (week)day, 5/week, \~ 50 / term

**Projects:** 3 total

**Assessments:** 6 tests (examlets) + final

## Passing Requirements

You must satisfy **ALL** conditions to pass the course:

1.  Earn a grade of at least 50% in the Lab component.
2.  Achieve a minimum grade of 50% in both the Test and Exam components combined.
3.  Pass the Final Exam with a minimum grade of 40%.

If students do not satisfy the appropriate requirements, the student will be assigned the **lower** of their earned course grade or a maximum overall grade of 45 in the course.

## Evaluation

::: small-font-size
| Item                 | Weight          | Due date(s)       |
|----------------------|-----------------|-------------------|
| Learning Logs        | 5% (10 x 0.5%)  | Saturdays at 6 PM |
| Problems of the Week | 25% (10 x 2.5%) | Fridays at 6 PM   |
| Labs                 | 5% (10 x 0.5%)  | Fridays at 6 PM   |
| Programming Projects | 15% (3 x 5%)    | Three in the term |
| Tests (Examlets)     | 30% (6 x 5%)    | \~ Bi-weekly      |
| Final Exam           | 20%             | TBD               |

: Course grading scheme: There will be 6 tests in this course in an (approximately) bi-weekly schedule.
:::

::: callout-important
## Grace period for due dates

All due dates in this course have an automatic 48-hour grace period after the due dates listed above.
Any submissions submitted past the grace period will not be graded (with some exceptions).
:::

## Semester overview {.smaller}

+-----------+-------------------+-------------------------------+------------------------------+-----------------------+----------------------------+
| Handcraft | Billboard Hot 100 | The Overstory and Pointillism | Artificial Music Composition | Road Trip Planning    | Spiderman's Social Network |
+===========+===================+===============================+==============================+=======================+============================+
| Design    | Web Scraping      | Voronoi Diagrams              | Markov Chains                | Traveling Salesperson | Natural Language           |
|           |                   |                               |                              |                       |                            |
| Objects   | Data Frames       | Efficiency                    | Random Numbers               | Intractable Problems  |                            |
|           |                   |                               |                              |                       |                            |
| Iteration | MatPlotLib        |                               | Graphs                       |                       |                            |
+-----------+-------------------+-------------------------------+------------------------------+-----------------------+----------------------------+

This course consists of a sequence of six explorations, assembled to provide a tour through data structure applications and algorithmic design.
Built around topics from arts, sciences, and technology, the explorations are thought provoking and engaging.
You will emerge from the course with increased proficiency in Python programming, and with a broad spectrum of tools for algorithmic problem solving.

## Course Tools

**Ed Discussion:** class discussion forum

**PrairieLearn:** platform to help us give you feedback on work you do!

**GitHub:** code repository and version control

**Visual Studio Code:** developer environment

**Canvas:** basically just a place for you to find all the relevant links to things‚Ä¶

# Any questions before we continue?

# Break

{{< countdown minutes=5 >}}

## Tangrams

::: {layout="[35.7,5,59.3]" layout-valign="center"}
![](images/tangram-square.png){fig-alt="The different geometric shapes of a tangram form a square."}

{{< iconify fa6-solid arrow-right size=2xl >}}

![](images/tangram-house.png){fig-alt="The different geometric shapes of a tangram form a house"}
:::

## {{< iconify fa6-solid laptop-code >}} Your turn: tangrams {.activity}

1.  Define a small working group of size up to 4.

2.  One of you share: <https://mathigon.org/tangram>

3.  Solve as many as you'd like, together

4.  Speculate together on why you're doing this!!

{{< countdown minutes=10 >}}

# Let's learn <br> {{< iconify fa6-brands markdown >}} Markdown

{{< countdown minutes=20 >}}

## {{< iconify fa6-solid laptop-code >}} Your turn: time to practice Markdown! {.activity}

{{< countdown minutes=20 >}}

# The Magic Number for today <br> <br> \_\_\_\_\_\_ <br> <br> See you Thursday! {style="text-align: center;"}
